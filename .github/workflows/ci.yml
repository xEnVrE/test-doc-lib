name: C++ CI Workflow

on:
  push:
  pull_request:
    branches:
      - master
      - devel

  schedule:
  - cron:  '0 2 * * *'

jobs:
  build:
    name: '[${{ matrix.os }}@${{ matrix.build_type }}]'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build_type: [Release, Debug]
        os: [ubuntu-20.04, windows-latest, macOS-latest]

    steps:
    - uses: actions/checkout@v2

    - name: Remove broken apt repos [Ubuntu]
      if: contains(matrix.os, 'ubuntu')
      run: for apt_file in `grep -lr microsoft /etc/apt/sources.list.d/`; do sudo rm $apt_file; done

    - name: Create Build Environment
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: Configure CMake [Ubuntu/macOS]
      if: contains(matrix.os, 'ubuntu') || matrix.os == 'macOS-latest'
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: cmake $GITHUB_WORKSPACE -DBUILD_TESTING:BOOL=ON -DCMAKE_BUILD_TYPE=${{matrix.build_type}}

    - name: Configure CMake [Windows]
      if: contains(matrix.os, 'windows-latest')
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: cmake $GITHUB_WORKSPACE -A x64 -DBUILD_TESTING:BOOL=ON -DCMAKE_BUILD_TYPE=${{matrix.build_type}}

    - name: Build
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: cmake --build . --config ${{matrix.build_type}}

    - name: Test
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: ctest -C ${{matrix.build_type}} -VV
